{"version":3,"sources":["Components/Header.js","Components/India.js","Components/StateGraph.js","Components/StateTable.js","Components/SingleState.js","Components/Home.js","Components/Footer.js","Components/WorldTable.js","Components/Country.js","Components/WorldSearch.js","Components/World.js","Components/News.js","Components/Precautions.js","App.js","serviceWorker.js","index.js","assets/doubt.PNG","assets/washing-hands.jpg","assets/social-distance.png","assets/cover-face.jpg","assets/sneeze.jpg","assets/house-cleaing.jpg","assets/monitor-health.jpg"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","Navbar","dark","color","expand","className","NavbarToggler","onClick","NavbarBrand","to","Collapse","isOpen","navbar","Nav","NavItem","Component","India","results","received","fetch","response","json","data","console","log","fetchFirst","colSpan","id","statewise","confirmed","active","deaths","recovered","deltaconfirmed","deltadeaths","StateGraph","options_all","chart","type","stroke","curve","title","text","align","xaxis","categories","options_total","options_active","options_deaths","options_recovered","All","name","total","oldData","selectedData","selectedColumn","dates","i","length","push","date","parseInt","totalconfirmed","totaldeceased","totalrecovered","ac","colors","toolbar","show","width","dashArray","fill","markers","size","shape","fillColor","dataLabels","enabled","margin","legend","position","horizontalAlign","offsetY","offsetX","style","fontsize","options","series","height","StateTable","stateData","table","row","stateName","key","onStateSelect","renderTable","SingleState","loading","index","selectedState","j","districtData","district","deceased","Home","updateState","window","innerWidth","scroll","scrollTo","country","cases_time_series","renderTop","renderDown","Footer","RiyaLinkedIn","RiyaGithub","RiyaMail","VibhushitLinkedIn","VibhushitGithub","VibhushitMail","open","location","href","UncontrolledPopover","trigger","placement","target","PopoverHeader","PopoverBody","WorldTable","Global","TotalConfirmed","TotalDeaths","TotalRecovered","NewConfirmed","NewDeaths","Country","countryName","search","cases","todayCases","todayDeaths","WorldSearch","val","value","onChange","selectCountry","World","News","newsData","articles","Content","content","urlToImage","description","substring","CardTitle","source","CardImg","src","CardText","url","Card","renderCard","Precautions","doubts","hand","distance","mask","sneeze","cleaning","health","App","basename","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","documentElement","offsetWidth","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.301fcddb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, Collapse, NavItem, NavbarToggler } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        isNavOpen: false\r\n    }\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n\r\n  toggleNav(){\r\n    this.setState({ isNavOpen: !this.state.isNavOpen });\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n        <div >\r\n            <React.Fragment >\r\n                <Navbar dark color = \"dark\" expand = \"md\">\r\n                    <div className = \"container\">\r\n                        <NavbarToggler onClick = {this.toggleNav} />\r\n                        <NavbarBrand>\r\n                        <NavLink className = \"nav-link\" to = \"/\" >\r\n                            <h3 className=\"text-white\">Covid-19 Tracker</h3>\r\n                        </NavLink>\r\n                        </NavbarBrand>\r\n\r\n                        <Collapse isOpen = {this.state.isNavOpen} navbar className = \"ml-auto\">\r\n                            <Nav navbar >\r\n                                <NavItem>\r\n                                    <NavLink className = \"nav-link\" to = \"/home\" >\r\n                                    <span className = \"fa fa-home fa-lg\" /> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className = \"nav-link\" to = \"/world\" >\r\n                                    <span className = \"fa fa-globe\" /> World\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className = \"nav-link\" to = \"/news\" >\r\n                                    <span className = \"fa fa-newspaper-o\" /> News\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className = \"nav-link\" to = \"/precaution\" >\r\n                                        <span className = \"fa fa-info-circle\" /> Indications & Protections\r\n                                    </NavLink>\r\n                                </NavItem> \r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        </div>\r\n       \r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass India extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            results: [],\r\n            received: false\r\n        };\r\n    }\r\n\r\n    async fetchFirst(){\r\n        const response = await fetch(\"https://api.covid19india.org/data.json\");\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.setState({results: data, received: true});\r\n        console.log(this.state.results);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchFirst();\r\n    }\r\n    render() {\r\n        return(\r\n            \r\n            <div>\r\n                { this.state.received ?\r\n                    <table className=\"india mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colSpan='4'  className = \"table-heading\">INDIA</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>CASES</td>\r\n                                <td>ACTIVE</td>\r\n                                <td>DEATHS</td>\r\n                                <td>RECOVERED</td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td id=\"total\">{this.state.results.statewise[0].confirmed}</td>\r\n                                <td id=\"active\">{this.state.results.statewise[0].active}</td>\r\n                                <td id=\"deaths\">{this.state.results.statewise[0].deaths}</td>\r\n                                <td id=\"recover\">{this.state.results.statewise[0].recovered}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        \r\n                        <thead>\r\n                            <tr>\r\n                                <td colSpan='2' className=\"innerTable\">TODAY CASES</td>\r\n                                <td colSpan='2' className=\"innerTable\">TODAY DEATHS</td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            <tr>\r\n                                <td id=\"names\"colSpan='2'>{this.state.results.statewise[0].deltaconfirmed}</td>\r\n                                <td id=\"names\" colSpan='2'>{this.state.results.statewise[0].deltadeaths}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    :\r\n                    <div className=\"loading\"> Loading...  <i className=\"fa fa-spinner fa-spin\" ></i> </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default India;","import React, { Component } from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass StateGraph extends Component {\r\n\r\n    state = {\r\n\r\n        options_all: {\r\n            chart: {\r\n                type: \"line\",\r\n           \r\n                stroke: {\r\n                    curve: 'smooth'\r\n                }\r\n            },\r\n          \r\n            title: {\r\n                text: \"\",\r\n                align: \"center\",\r\n            },\r\n\r\n            xaxis: {\r\n                categories: [],\r\n            },\r\n        },\r\n\r\n\r\n        options_total: {\r\n            chart: {\r\n                type: \"line\",\r\n           \r\n                stroke: {\r\n                    curve: 'smooth'\r\n                }\r\n            },\r\n          \r\n            title: {\r\n                text: \"\",\r\n                align: \"center\",\r\n            },\r\n\r\n            xaxis: {\r\n                categories: [],\r\n            },\r\n        },\r\n\r\n        options_active: {\r\n            chart: {\r\n                type: \"line\",\r\n           \r\n                stroke: {\r\n                    curve: 'smooth'\r\n                }\r\n            },\r\n          \r\n            title: {\r\n                text: \"\",\r\n                align: \"center\",\r\n            },\r\n\r\n            xaxis: {\r\n                categories: [],\r\n            },\r\n        },\r\n\r\n        options_deaths: {\r\n            chart: {\r\n                type: \"line\",\r\n           \r\n                stroke: {\r\n                    curve: 'smooth'\r\n                }\r\n            },\r\n          \r\n            title: {\r\n                text: \"\",\r\n                align: \"center\",\r\n            },\r\n\r\n            xaxis: {\r\n                categories: [],\r\n            },\r\n        },\r\n\r\n        options_recovered: {\r\n            chart: {\r\n                type: \"line\",\r\n           \r\n                stroke: {\r\n                    curve: 'smooth'\r\n                }\r\n            },\r\n          \r\n            title: {\r\n                text: \"\",\r\n                align: \"center\",\r\n            },\r\n\r\n            xaxis: {\r\n                categories: [],\r\n            },\r\n        },\r\n        All:[\r\n            {\r\n                name: \"\",\r\n                data: [],\r\n            }\r\n        ],\r\n        total: [\r\n            {\r\n                name: \"\",\r\n                data: [],\r\n            },\r\n        ],\r\n\r\n        deaths: [\r\n            {\r\n                name: \"\",\r\n                data: [],\r\n            },\r\n        ],\r\n\r\n        active: [\r\n            {\r\n                name: \"\",\r\n                data: [],\r\n            },\r\n        ],\r\n\r\n        recovered: [\r\n            {\r\n                name: \"\",\r\n                data: [],\r\n            },\r\n        ],\r\n    };\r\n\r\n    componentDidMount(){\r\n        var data = this.props.oldData;\r\n        var selectedData = this.props.selectedColumn;\r\n        var confirmed = [];\r\n        var dates = [];\r\n        var deaths = [];\r\n        var recovered = [];\r\n        var active = [];\r\n        \r\n        console.log(selectedData);\r\n        \r\n        for(var i = data.length - 22; i < data.length; i++){\r\n            dates.push(data[i].date);\r\n            confirmed.push( parseInt( data[i].totalconfirmed) );\r\n            deaths.push( parseInt(data[i].totaldeceased) );\r\n            recovered.push( parseInt(data[i].totalrecovered) );\r\n            var ac = parseInt(data[i].totalconfirmed) - (parseInt(data[i].totaldeceased) + parseInt(data[i].totalrecovered));\r\n            active.push( parseInt(ac));\r\n\r\n        }\r\n\r\n        this.setState({\r\n\r\n            options_all: {\r\n                \r\n                colors: ['#0000ff', '#ff0000', '#ffff00', '#228B22' ],\r\n                chart: {\r\n                    type: \"line\",\r\n                    \r\n                    toolbar: {\r\n                        show: false\r\n                    }  \r\n                },\r\n\r\n                stroke: {\r\n                    curve: \"smooth\",\r\n                    width: [5, 7, 5],\r\n                    dashArray: [0, 8, 5]\r\n                },\r\n\r\n                fill: {\r\n                    colors: ['#F44336', '#E91E63', '#9C27B0']\r\n                },\r\n    \r\n                markers: {\r\n                    size: 1,\r\n                    shape: \"circle\",\r\n                    fillColor: '#f7f4f3',\r\n                },\r\n\r\n                dataLabels: {\r\n                    enabled: true,\r\n                },\r\n    \r\n                title: {\r\n                    margin: 20,\r\n                },\r\n    \r\n                legend: {\r\n                    position: 'top',\r\n                    horizontalAlign: 'right',\r\n                    offsetY: -10,\r\n                    offsetX: -5,\r\n                },\r\n                \r\n            },\r\n\r\n\r\n            options_total: {\r\n\r\n                colors:['#0000ff'],\r\n                \r\n                chart: {\r\n                    type: \"area\",\r\n                    \r\n                    toolbar: {\r\n                        show: false\r\n                    }  \r\n                },\r\n                \r\n                stroke: {\r\n                    curve: \"smooth\",\r\n                },\r\n\r\n                fill: {\r\n                    colors: ['#0000ff']\r\n                },\r\n    \r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n    \r\n                xaxis: {\r\n                    categories: dates\r\n                },\r\n                title: {\r\n                    text: \"Last 20+ days Confirmed Cases\",\r\n                    align: \"center\",\r\n                    margin: 20,\r\n                    style: {\r\n                        fontsize: \"30px\",\r\n                        color: \"#0000ff\"\r\n                    }\r\n                    \r\n                }\r\n\r\n            },\r\n\r\n            options_deaths: {\r\n\r\n                colors:['#ff0000'],\r\n                \r\n                chart: {\r\n                    type: \"area\",\r\n                    \r\n                    toolbar: {\r\n                        show: false\r\n                    }  \r\n                },\r\n\r\n                stroke: {\r\n                    curve: \"smooth\",\r\n                },\r\n\r\n                fill: {\r\n                    colors: ['#ff0000']\r\n                },\r\n\r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n    \r\n                xaxis: {\r\n                    categories: dates\r\n                },\r\n                title: {\r\n                    text: \"Last 20+ days deaths\",\r\n                    align: \"center\",\r\n                    margin: 20,\r\n                    style: {\r\n                        fontsize: \"30px\",\r\n                        color: \"#ff0000\"\r\n                    }\r\n                    \r\n                }\r\n    \r\n            },\r\n\r\n            options_active: {\r\n\r\n                 colors:['#228B22'],\r\n                \r\n                chart: {\r\n                    type: \"area\",\r\n                    \r\n                    toolbar: {\r\n                        show: false\r\n                    }  \r\n                },\r\n\r\n                stroke: {\r\n                    curve: \"smooth\",\r\n                },\r\n\r\n                fill: {\r\n                    colors: ['#00ff00']\r\n                },\r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n    \r\n                xaxis: {\r\n                    categories: dates\r\n                },\r\n                title: {\r\n                    text: \"Last 20+ days active Cases\",\r\n                    align: \"center\",\r\n                    margin: 20,\r\n                    style: {\r\n                        fontsize: \"30px\",\r\n                        color: \"#228B22\"\r\n                    }\r\n                    \r\n                },\r\n                \r\n            },\r\n\r\n            options_recovered: {\r\n\r\n                colors:['#ffff00'],\r\n                \r\n                chart: {\r\n                    type: \"area\",\r\n                    \r\n                    toolbar: {\r\n                        show: false\r\n                    }  \r\n                },\r\n\r\n                stroke: {\r\n                    curve: \"smooth\",\r\n                },\r\n\r\n                fill: {\r\n                    colors: ['#ffff00']\r\n                },\r\n\r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n    \r\n                xaxis: {\r\n                    categories: dates\r\n                },\r\n                title: {\r\n                    text: \"Last 20+ days recovered Cases\",\r\n                    align: \"center\",\r\n                    margin: 20,\r\n                    style: {\r\n                        fontsize: \"30px\",\r\n                        color: \"#ffdf00\"\r\n                    }\r\n                    \r\n                },\r\n\r\n            },\r\n\r\n            All: [\r\n                    {\r\n                        name: \"Total Cases\",\r\n                        data: confirmed\r\n                    },\r\n\r\n                    {\r\n                        name: \"Total Deaths\",\r\n                        data: deaths\r\n                    },\r\n\r\n                    {\r\n                        name: \"Recoverd\",\r\n                        data: recovered\r\n                    },\r\n\r\n                    {\r\n                        name: \"Active\",\r\n                        data: active\r\n                    }\r\n                 ],\r\n\r\n         total : [\r\n                    {\r\n                        name: \"Total Cases\",\r\n                        data: confirmed\r\n                    }\r\n                 ],\r\n\r\n         active : [\r\n                    {\r\n                        name: \"Active Cases\",\r\n                        data: active\r\n                    }\r\n                 ],\r\n\r\n         deaths : [\r\n                    {\r\n                        name: \"Deaths\",\r\n                        data: deaths\r\n                    }\r\n                  ],\r\n\r\n        recovered : [\r\n                    {\r\n                        name: \"Recovered\",\r\n                        data: recovered\r\n                    }\r\n                  ]\r\n\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    render(){   \r\n\r\n        return(\r\n            <div className = \"graph\">\r\n                <Chart \r\n                    options={this.state.options_all} \r\n                    series={this.state.All}\r\n                    type = \"line\"\r\n                    height = '500px'\r\n                 />\r\n                 \r\n                  <Chart \r\n                    options={this.state.options_total} \r\n                    series={this.state.total}\r\n                    type=\"area\"\r\n                    height = '335px'\r\n                    \r\n                 />\r\n\r\n                  <Chart \r\n                    options={this.state.options_active} \r\n                    series={this.state.active}\r\n                    type=\"area\"\r\n                    height = '335px'\r\n                    \r\n                 />\r\n\r\n                  <Chart \r\n                    options={this.state.options_deaths} \r\n                    series={this.state.deaths}\r\n                    type=\"area\"\r\n                    height = '335px'\r\n                    \r\n                 />\r\n\r\n                   <Chart \r\n                    options={this.state.options_recovered} \r\n                    series={this.state.recovered}\r\n                    type=\"area\"\r\n                    height = '335px'\r\n                    \r\n                 />\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StateGraph;","import React, {Component} from 'react';\r\nclass StateTable extends Component{\r\n\r\n\r\n    renderTable(stateData){\r\n        let table = [];\r\n\r\n        for(let i = 1; i < stateData.length; i++){\r\n            \r\n            let row = [];\r\n            let stateName = stateData[i].state;\r\n\r\n            if(stateName !== \"State Unassigned\"){\r\n\r\n                row.push(<td className=\"state_name\">{stateData[i].state} <i className=\" fa fa-hand-pointer-o ml-1\"></i></td>);\r\n                row.push(<td>{stateData[i].active}</td>);\r\n                row.push(<td>{stateData[i].confirmed}</td>);\r\n                row.push(<td>{stateData[i].deaths}</td>);\r\n                row.push(<td>{stateData[i].recovered}</td>);\r\n                table.push(<tr key={stateData[i].state}  onClick={() => this.props.onStateSelect(stateName)}>{row}</tr>);\r\n            }\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.props.stateData);\r\n        console.log(this.props.stateData.length);\r\n\r\n        return(\r\n            <div>\r\n                    <table className=\"stateTable\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th id=\"names\">State / UT</th>\r\n                            <th id=\"active\">Active Cases</th>\r\n                            <th id=\"total\">Confirmed Cases</th>\r\n                            <th id=\"deaths\">Total Deaths</th>\r\n                            <th id=\"recover\">Recovered</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTable(this.props.stateData)}\r\n                        </tbody>\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    \r\nexport default StateTable;","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass SingleState extends Component{\r\n \r\n    state = {\r\n        data : [],\r\n        loading : false, \r\n        index: null\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch(\"https://api.covid19india.org/v2/state_district_wise.json\");\r\n        const data = await response.json();\r\n\r\n        this.setState({data: data, loading: true});\r\n        console.log(this.state.index);\r\n\r\n    }\r\n\r\n    renderTop(stateData, selectedState){\r\n\r\n        let table = [];\r\n        let row = [];\r\n        let i = 0;\r\n\r\n        for(i = 0; i < this.stateData.length; i++){\r\n            if(stateData[i].state === selectedState){\r\n                break;\r\n            }else{\r\n                i++;\r\n            }\r\n        }\r\n\r\n       console.log(\"renderTop\" + stateData);\r\n\r\n        row.push(<td id = \"total\">{stateData[i].confirmed}</td>);\r\n        row.push(<td>{stateData[i].active}</td>);\r\n        row.push(<td>{stateData[i].deaths}</td>);\r\n        row.push(<td>{stateData[i].recovered}</td>);\r\n\r\n        table.push(<tr> {row} </tr>);\r\n\r\n        return table;\r\n\r\n    }\r\n\r\n    renderTable(selectedState){\r\n\r\n        let table = [];\r\n\r\n        for(let i = 0; i < this.state.data.length; i++) {\r\n            \r\n            if(this.state.data[i].state === selectedState){\r\n\r\n                for(let j = 0; j < this.state.data[i].districtData.length; j++){\r\n                    \r\n                    let row = [];\r\n\r\n                    row.push(<td>{this.state.data[i].districtData[j].district}</td>);\r\n                    row.push(<td>{this.state.data[i].districtData[j].active}</td>);\r\n                    row.push(<td>{this.state.data[i].districtData[j].confirmed}</td>);\r\n                    row.push(<td>{this.state.data[i].districtData[j].deceased}</td>);\r\n                    row.push(<td>{this.state.data[i].districtData[j].recovered}</td>);\r\n                    table.push(<tr key = {this.state.data[i].districtData[j].district}>{row}</tr>);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return table;\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"state length\"+this.props.stateData.length);\r\n        console.log(\"data selected\"+this.props.selectedState);\r\n        \r\n        return (\r\n            \r\n                <div className=\"App-link\">\r\n                    {this.state.loading ?\r\n                        <table className=\"singleState mt-4\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th id=\"names\">District</th>\r\n                                    <th id=\"active\">Active Cases</th>\r\n                                    <th id=\"total\">Confirmed Cases</th>\r\n                                    <th id=\"deaths\">Total Deaths</th>\r\n                                    <th id=\"recover\">Recovered</th>\r\n                                </tr>\r\n                            \r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderTable(this.props.selectedState)}\r\n                            </tbody>\r\n                        </table>\r\n                        :\r\n                        <div>\r\n                            Loading\r\n                        </div>\r\n                    }\r\n                </div>\r\n                \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingleState;\r\n","\r\nimport React, { Component } from 'react';\r\nimport India from './India';\r\nimport StateGraph from './StateGraph';\r\nimport StateTable from './StateTable';\r\nimport SingleState from './SingleState';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\n\r\nclass Home extends Component{\r\n\r\n  state = {\r\n    results: [],\r\n    received: false,\r\n    selectedState: null\r\n  };\r\n\r\n  constructor(props){\r\n    super(props);\r\n    \r\n\r\n    this.onStateSelect = this.onStateSelect.bind(this);\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n\r\n  async fetchFirst(){\r\n\r\n    const response = await fetch(\"https://api.covid19india.org/data.json\");\r\n    const data = await response.json();\r\n    console.log(data);\r\n    this.setState({results: data, received: true, selectedState: null});\r\n    console.log(this.state.results);\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchFirst();\r\n  }\r\n\r\n  onStateSelect(stateName){\r\n\r\n    this.setState({ selectedState: stateName });\r\n\r\n    if(window.innerWidth <= 500){\r\n      scroll.scrollTo(4000);\r\n    } else if(window.innerWidth > 500 && window.innerWidth <= 900){\r\n        scroll.scrollTo(3600)\r\n    } else {\r\n      scroll.scrollTo(2000);\r\n    }\r\n\r\n    console.log(\"select state home\" + this.state.selectedState);\r\n    console.log(\"screen length \" + window.innerWidth);\r\n  }\r\n\r\n  updateState(){\r\n    this.state.selectedState = null;\r\n  }\r\n\r\n  renderTop(){\r\n    let table = [];\r\n    \r\n    for(let i = 0; i < this.state.results.statewise.length; i++){\r\n      if(this.state.results.statewise[i].state === this.state.selectedState){\r\n        \r\n        let row = [];\r\n\r\n        row.push(<td id=\"total\">{this.state.results.statewise[i].confirmed}</td>);\r\n        row.push(<td id=\"active\">{this.state.results.statewise[i].active}</td>);\r\n        row.push(<td id=\"deaths\">{this.state.results.statewise[i].deaths}</td>);\r\n        row.push(<td id=\"recover\">{this.state.results.statewise[i].recovered}</td>);\r\n                    \r\n        table.push(<tr>{row}</tr>);\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    return table;\r\n  }\r\n\r\n  renderDown(){\r\n    let table = [];\r\n\r\n    for(let i = 0; i < this.state.results.statewise.length; i++){\r\n      if(this.state.results.statewise[i].state === this.state.selectedState){\r\n        \r\n        let row = [];\r\n\r\n        row.push(<td colSpan = \"2\" id=\"names\">{this.state.results.statewise[i].deltaconfirmed}</td>);\r\n        row.push(<td colSpan = \"2\" id=\"names\">{this.state.results.statewise[i].deltadeaths}</td>);\r\n                    \r\n        table.push(<tr>{row}</tr>);\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    return table;\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const data = this.state.results.statewise;\r\n\r\n    return (\r\n      <div className=\"App-link\">\r\n        {\r\n          this.state.received ? \r\n          <div className=\"container-fluid\">\r\n\r\n            <India country = {this.state.results.statewise[0]}/>\r\n            \r\n            <div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <StateTable stateData = {this.state.results.statewise} onStateSelect = {this.onStateSelect} /> \r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <StateGraph oldData = {this.state.results.cases_time_series} />\r\n                </div>\r\n              </div>\r\n\r\n              {\r\n                this.state.selectedState == null ?\r\n                  <div> </div>\r\n                  :\r\n                  <div>\r\n\r\n                    <table className = \"mt-5\" id = \"state-table\">\r\n                        <thead>\r\n                            <tr>\r\n                              <th colSpan='4' className = \"table-heading\">{this.state.selectedState}</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>CASES</td>\r\n                                <td>ACTIVE</td>\r\n                                <td>DEATHS</td>\r\n                                <td>RECOVERED</td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                           \r\n                          {this.renderTop()}\r\n                       \r\n                        </tbody>\r\n\r\n                        <thead>\r\n                          <tr>\r\n                            <td colSpan='2' className=\"innerTable\">TODAY CASES</td>\r\n                            <td colSpan='2' className=\"innerTable\">TODAY DEATHS</td>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                       \r\n                          {this.renderDown()}\r\n                       \r\n                        </tbody>\r\n                      </table>\r\n                        \r\n                      <SingleState selectedState = {this.state.selectedState} stateData = {data}  />\r\n\r\n                      {this.updateState()}\r\n\r\n                  </div> \r\n              }\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className=\"loading\"> Loading...  <i className=\"fa fa-spinner fa-spin\" ></i> </div>\r\n        }\r\n      </div>\r\n   \r\n    );\r\n  }\r\n    \r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.RiyaLinkedIn = this.RiyaLinkedIn.bind(this);\r\n        this.RiyaGithub = this.RiyaGithub.bind(this);\r\n        this.RiyaMail = this.RiyaMail.bind(this);\r\n        this.VibhushitLinkedIn = this.VibhushitLinkedIn.bind(this);\r\n        this.VibhushitGithub = this.VibhushitGithub.bind(this);\r\n        this.VibhushitMail = this.VibhushitMail.bind(this);\r\n    }\r\n\r\n    RiyaLinkedIn () {\r\n        window.open(\"https://www.linkedin.com/in/riya242k\", \"_blank\");\r\n    }\r\n\r\n    RiyaGithub () {\r\n        window.open(\"https://github.com/riya242k\", \"_blank\");\r\n    }\r\n\r\n    RiyaMail () {\r\n        window.location.href = `mailto:riya171671.cse@chitkara.edu.in`;\r\n    }\r\n\r\n    VibhushitLinkedIn () {\r\n        window.open(\"https://www.linkedin.com/in/vibhushit-singhal\", \"_blank\");\r\n    }\r\n\r\n    VibhushitGithub () {\r\n        window.open(\"https://github.com/Vibhushit07\", \"_blank\");\r\n    }\r\n\r\n    VibhushitMail () {\r\n        window.location.href = `mailto:vibhushitsinghal80@gmail.com`;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className = \"footer bg-dark\">\r\n               © Made by Riya Gupta <i id=\"riya\" className=\"fa fa-hand-pointer-o\" /> Vibhushit Singhal <i id=\"vibhushit\" className=\"fa fa-hand-pointer-o mr-0\"/>\r\n\r\n                <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"riya\">\r\n                    <PopoverHeader>Contact Us</PopoverHeader>\r\n                        <PopoverBody>\r\n\r\n                            <span className = \"fa fa-linkedin fa-lg ml-2\"  onClick = { this.RiyaLinkedIn } /> \r\n                            <span className = \"fa fa-github fa-lg ml-2\"  onClick = { this.RiyaGithub } /> \r\n                            <span className = \"fa fa-envelope fa-lg ml-2\"  onClick = { this.RiyaMail } /> \r\n                        \r\n                        </PopoverBody>\r\n                </UncontrolledPopover>\r\n\r\n                <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"vibhushit\">\r\n                    <PopoverHeader>Contact Us</PopoverHeader>\r\n                        <PopoverBody>\r\n                            <span className = \"fa fa-linkedin fa-lg ml-2\"  onClick = { this.VibhushitLinkedIn } /> \r\n                            <span className = \"fa fa-github fa-lg ml-2\"  onClick = { this.VibhushitGithub } /> \r\n                            <span className = \"fa fa-envelope fa-lg ml-2\"  onClick = { this.VibhushitMail } /> \r\n                        </PopoverBody>\r\n                </UncontrolledPopover>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\n\r\nclass WorldTable extends Component{\r\n\r\n    render() {\r\n\r\n        let active = this.props.Global.TotalConfirmed - (this.props.Global.TotalDeaths + this.props.Global.TotalRecovered);\r\n\r\n        return(\r\n            <div>\r\n              <table className=\"global-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th colSpan='4' className = \"table-heading\"> GLOBAL </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>CASES</td>\r\n                        <td>ACTIVE</td>\r\n                        <td>DEATHS</td>\r\n                        <td>RECOVERED</td>\r\n                        </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td id=\"total\">{this.props.Global.TotalConfirmed}</td>\r\n                        <td id=\"active\">{active}</td>\r\n                        <td id=\"deaths\">{this.props.Global.TotalDeaths}</td>\r\n                        <td id=\"recover\">{this.props.Global.TotalRecovered}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan='2' className=\"innerTable\">TODAY CASES</td>\r\n                        <td colSpan='2' className=\"innerTable\">TODAY DEATHS</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td id=\"names\" colSpan='2'>{this.props.Global.NewConfirmed}</td>\r\n                        <td id=\"names\" colSpan='2'>{this.props.Global.NewDeaths}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default WorldTable;","import React, {Component} from 'react';\r\n\r\nclass Country extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: [], \r\n      received: false\r\n    }\r\n  }\r\n\r\n  async search(){\r\n\r\n    const country = this.props.countryName;\r\n    console.log(\"CDM \" + country);\r\n\r\n    if(country != null) {\r\n      const response = await fetch(\"https://disease.sh/v2/countries/\" + country);\r\n      const data = await response.json();\r\n      console.log(data);\r\n      this.setState({results: data, received: true});\r\n      console.log(this.state.results);\r\n    }\r\n  } \r\n  \r\n \r\n  render () {\r\n\r\n    this.search();\r\n\r\n    console.log(this.props.countryName);\r\n    \r\n    return (\r\n      <div>\r\n        { this.state.received ?\r\n            <div>\r\n              <table className=\"countrySearchTable \">\r\n                <thead>\r\n                    <tr>\r\n                      <th colSpan='4' className=\"table-heading\"> {this.props.countryName} </th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>CASES</td>\r\n                      <td>ACTIVE</td>\r\n                      <td>DEATHS</td>\r\n                      <td>RECOVERED</td>\r\n                      </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td id=\"total\">{this.state.results.cases}</td>\r\n                    <td id=\"active\">{this.state.results.active}</td>\r\n                    <td id=\"deaths\">{this.state.results.deaths}</td>\r\n                    <td id=\"recover\">{this.state.results.recovered}</td>\r\n                  </tr>\r\n                </tbody>\r\n                <thead>\r\n                    <tr>\r\n                      <td colSpan='2' className=\"innerTable\">TODAY CASES</td>\r\n                      <td colSpan='2' className=\"innerTable\">TODAY DEATHS</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                      <td id=\"names\" colSpan='2'>{this.state.results.todayCases}</td>\r\n                      <td id=\"names\" colSpan='2'>{this.state.results.todayDeaths}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            :\r\n            <div>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Country;","import React, {Component} from 'react';\r\nimport { CountryDropdown } from 'react-country-region-selector';\r\nimport Country from './Country';\r\n\r\nclass WorldSearch extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = { country: ''};\r\n  }\r\n \r\n  selectCountry (val) {\r\n    this.setState({ country: val });\r\n    console.log(val);\r\n    console.log(\"country \" + this.state.country);\r\n  }\r\n \r\n  render () {\r\n    const { country } = this.state;\r\n    return (\r\n      <div>\r\n      <div className = \"d-flex justify-content-center\">\r\n        <CountryDropdown className=\"dropdown\"\r\n          value={country}\r\n          onChange={(val) => this.selectCountry(val)} />\r\n          </div>\r\n        {\r\n            this.state.country !== '' ?\r\n                <Country countryName = {this.state.country} />\r\n            :\r\n                <div> </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorldSearch;","import React, { Component } from \"react\";\r\nimport WorldTable from \"./WorldTable\";\r\nimport WorldSearch from \"./WorldSearch\";\r\n\r\nclass World extends Component {\r\n\r\n    state = {\r\n        data : [],\r\n        received: false\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch(\"https://api.covid19api.com/summary\");\r\n        const data = await response.json();\r\n        console.log(data);\r\n        var active = data.Global.TotalConfirmed - (data.Global.TotalDeaths + data.Global.TotalRecovered);\r\n        this.setState({results: data, active: active, received: true});\r\n        console.log(this.state.results);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"App-link\">\r\n                {\r\n                    this.state.received ?\r\n                    <div className=\"mt-3\">\r\n                        <WorldTable Global = {this.state.results.Global} />\r\n                        <WorldSearch />\r\n                    </div>\r\n                    :\r\n                    <div className=\"loading\"> Loading...  <i className=\"fa fa-spinner fa-spin\" ></i> </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default World;","import React,{Component} from 'react';\r\nimport {Card, CardImg, CardText, CardTitle} from 'reactstrap';\r\n\r\nclass News extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            results: [],\r\n            received: false\r\n        };\r\n    }\r\n\r\n    async fetchFirst(){\r\n        const response = await fetch(\"http://newsapi.org/v2/everything?q=bitcoin&from=2020-05-02&sortBy=publishedAt&apiKey=d646bd53647f403595680230fca57293\");\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.setState({results: data, received: true});\r\n        console.log(this.state.results);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchFirst();\r\n    }\r\n\r\nrenderCard(newsData){\r\n    let table = [];\r\n\r\n    for(let i = 0; i <  newsData.articles.length; i++){\r\n        \r\n        let row = [];\r\n        let Content = newsData.articles[i].content;\r\n\r\n         if(Content !== null && newsData.articles[i].urlToImage !== null){\r\n\r\n            let description = newsData.articles[i].description;\r\n\r\n            if(window.innerWidth <= 500){\r\n                if(description.length >= 80)\r\n                    description = description.substring(0, 80);\r\n                if(Content.length >= 80)\r\n                    Content = Content.substring(0, 80);\r\n                \r\n            } else if(window.innerWidth > 500 && window.innerWidth <= 900){\r\n                if(description.length >= 80)\r\n                    description = description.substring(0, 100);\r\n                if(Content.length >= 80)\r\n                    Content = Content.substring(0, 100);\r\n            } else {\r\n                if(description.length >= 150)\r\n                    description = description.substring(0, 150);\r\n                if(Content.length >= 125)\r\n                    Content = Content.substring(0, 125);\r\n            }\r\n\r\n            row.push(<CardTitle>{newsData.articles[i].source.name}</CardTitle>);\r\n            row.push(<CardTitle>{newsData.articles[i].title}</CardTitle>);\r\n            row.push(<CardImg height= \"250px\" width=\"100%\" src={newsData.articles[i].urlToImage} ></CardImg>);\r\n            row.push(<CardTitle>{description}</CardTitle>);\r\n            row.push(<CardText>{Content}</CardText>);\r\n            row.push(<CardText > <a href={newsData.articles[i].url}>Click to view full news <i className=\"fa fa-hand-pointer-o ml-1\"></i></a> </CardText>);\r\n            table.push( <div className=\"col-lg-6 \"> <Card className=\"text-center shadow-lg effect\">{row}</Card> </div> );\r\n        }\r\n    }\r\n\r\n    return table;\r\n}\r\n\r\nrender() {\r\n\r\n    return(\r\n            <div>\r\n                { this.state.received ?\r\n                    <div className=\"container\">\r\n                        <div className=\"row view overlay zoom\">\r\n                         {this.renderCard(this.state.results)}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"loading\"> Loading...  <i className=\"fa fa-spinner fa-spin\" ></i> </div>\r\n                }\r\n            </div>\r\n    );\r\n}\r\n}\r\nexport default News;\r\n\r\n// import React,{Component} from 'react';\r\n// import {Card, CardImg, CardText, CardTitle} from 'reactstrap';\r\n\r\n\r\n// class News extends Component{\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             results: [],\r\n//             received: false\r\n//         };\r\n//     }\r\n\r\n//     async fetchFirst(){\r\n//         const response = await fetch(\"http://newsapi.org/v2/top-headlines?country=in&q=COVID&apiKey=d646bd53647f403595680230fca57293\");\r\n//         const data = await response.json();\r\n//         console.log(data);\r\n//         this.setState({results: data, received: true});\r\n//         console.log(this.state.results);\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.fetchFirst();\r\n//     }\r\n\r\n// renderCard(newsData){\r\n//     let table = [];\r\n\r\n//     for(let i = 0; i <  newsData.articles.length; i++){\r\n        \r\n//         let row = [];\r\n//         let Content = newsData.articles[i].content;\r\n\r\n//          if(Content !== null && newsData.articles[i].urlToImage !==null ){\r\n//             row.push(<CardTitle>{newsData.articles[i].source.name}</CardTitle>);\r\n//             row.push(<CardTitle>{newsData.articles[i].title}</CardTitle>);\r\n//             row.push(<CardImg height= \"250px\" width=\"100%\" src={newsData.articles[i].urlToImage} ></CardImg>);\r\n//             row.push(<CardTitle>{newsData.articles[i].description}</CardTitle>);\r\n//             row.push(<CardText>{newsData.articles[i].content}</CardText>);\r\n//             row.push(<CardText > <a href={newsData.articles[i].url}>Click to view full news <i className=\"fa fa-hand-pointer-o ml-1\"></i></a> </CardText>);\r\n//             table.push( <div className=\"col-lg-6\"> <Card className=\"text-center shadow-lg effect\">{row}</Card> </div> );\r\n//         }\r\n//     }\r\n\r\n//     return table;\r\n// }\r\n\r\n// render() {\r\n\r\n//     return(\r\n//             <div>\r\n//                 { this.state.received ?\r\n//                     <div className=\"container\">\r\n//                         <div className=\"row view overlay zoom\">\r\n//                          {this.renderCard(this.state.results)}\r\n//                         </div>\r\n//                     </div>\r\n//                     :\r\n//                     <div className=\"loading\"> Loading...  <i className=\"fa fa-spinner fa-spin\" ></i> </div>\r\n//                 }\r\n//             </div>\r\n//     );\r\n// }\r\n// }\r\n// export default News;\r\n","import React, {Component} from 'react';\r\nimport doubts from '../assets/doubt.PNG';\r\nimport hand from '../assets/washing-hands.jpg';\r\nimport distance from '../assets/social-distance.png';\r\nimport mask from '../assets/cover-face.jpg';\r\nimport sneeze from '../assets/sneeze.jpg';\r\nimport cleaning from '../assets/house-cleaing.jpg';\r\nimport health from '../assets/monitor-health.jpg';\r\n\r\nclass Precautions extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div className = \"main\">\r\n                <div className = \"col-md-12\">\r\n                            <div className = \"row\">\r\n                                <div className = \"mt-4 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { doubts } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { doubts } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { doubts } className = \"iconl\" />\r\n                                    }\r\n                                </div>\r\n                                <div className = \"col\">\r\n                                    <h3 className = \"card-title h3 mb-2 mt-4 text-left\">Know how it spreads</h3>\r\n                                    <ul>\r\n                                        <li>There is currently no vaccine to prevent coronavirus disease 2019 (COVID-19).</li>\r\n                                        <li><strong>The best way to prevent illness is to avoid being exposed to this virus.</strong>\r\n                                        </li>\r\n                                        <li>The virus is thought to spread mainly from person-to-person.\r\n                                            <ul>\r\n                                                <li>Between people who are in close contact with one another (within about 6 feet).</li>\r\n                                                <li>Through respiratory droplets produced when an infected person coughs, sneezes or talks.</li>\r\n                                                <li>These droplets can land in the mouths or noses of people who are nearby or possibly be inhaled into the lungs.</li>\r\n                                                <li>Some recent studies have suggested that COVID-19 may be spread by people who are not showing symptoms.</li>\r\n                                            </ul>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n\r\n                <h1 className = \"text-center\"> Everyone Should </h1>\r\n\r\n                <div className = \"row \">\r\n                    <div className = \"col-md-12\">\r\n                        <div className = \"border-0 mb-3\">\r\n                            <div className = \"card-body \">\r\n                                <div className = \"row\">\r\n                                    <div className = \"card-icon pt-2 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { hand } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { hand } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { hand } className = \"iconl\" />\r\n                                    }\r\n                                    </div>\r\n                                    <div className = \"col\">\r\n                                        <h3 className = \"card-title h3 mb-2 text-left\">Wash your hands often</h3>\r\n                                        <ul>\r\n                                            <li>Wash your hands often with soap and water for at least 20 seconds especially after you have been in a public place, or after blowing your nose, coughing, or sneezing.</li>\r\n                                            <li>If soap and water are not readily available, <strong>use a hand sanitizer that contains at least 60% alcohol</strong>. Cover all surfaces of your hands and rub them together until they feel dry.</li>\r\n                                            <li><strong>Avoid touching your eyes, nose, and mouth</strong> with unwashed hands.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"row \">\r\n                    <div className = \"col-md-12\">\r\n                        <div className = \"border-0 mb-3\">\r\n                            <div className = \"card-body \">\r\n                                <div className = \"row\">      \r\n                                    <div className = \"card-icon pt-2 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { distance } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { distance } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { distance } className = \"iconl\" />\r\n                                    }\r\n                                    </div>\r\n                                    <div className = \"col\">\r\n                                        \r\n                                        <h3 className = \"card-title h3 mb-2 text-left\">Avoid close contact</h3>\r\n                                        \r\n                                        <ul>\r\n                                            <li><strong>Avoid close contact with people who are sick, even inside your home.</strong> If possible, maintain 6 feet between the person who is sick and other household members.</li>\r\n                                            <li><strong>Put distance between yourself and other people outside of your home</strong>.\r\n                                                <ul>\r\n                                                    <li>Remember that some people without symptoms may be able to spread virus.</li>\r\n                                                    <li>Stay at least 6 feet (about 2 arms’ length) from other people.</li>\r\n                                                    <li>Do not gather in groups.</li>\r\n                                                    <li>Stay out of crowded places and avoid mass gatherings.</li>\r\n                                                    <li>Keeping distance from others is especially important for people who are at higher risk of getting very sick.</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"row \">\r\n                    <div className = \"col-md-12\">\r\n                        <div className = \"border-0 mb-3\">\r\n                            <div className = \"card-body \">\r\n                                <div className = \"row\">\r\n                                    <div className = \"card-icon pt-2 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { mask } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { mask } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { mask } className = \"iconl\" />\r\n                                    }\r\n                                    </div>\r\n                                    <div className = \"col\">\r\n                                        <h3 className = \"card-title h3 mb-2 text-left\">Cover your face when around others</h3>\r\n                                        <ul>\r\n                                            <li>You could spread COVID-19 to others even if you do not feel sick.</li>\r\n                                            <li>Everyone should wear a cloth face cover when they have to go out in public, for example to the grocery store or to pick up other necessities.\r\n                                                <ul>\r\n                                                    <li>Cloth face coverings should not be placed on young children under age 2, <br /> anyone who has trouble breathing, or is unconscious, incapacitated or otherwise unable to remove the mask without assistance.</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li>The cloth face cover is meant to protect other people in case you are infected.</li>\r\n                                            <li>Do NOT use a facemask meant for a healthcare worker.</li>\r\n                                            <li>Continue to keep about 6 feet between yourself and others. The cloth face cover is not a substitute for social distancing.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"row \">\r\n                    <div className = \"col-md-12\">\r\n                        <div className = \"border-0 mb-3\">\r\n                            <div className = \"card-body \">\r\n                                <div className = \"row\">\r\n                                    <div className = \"card-icon pt-2 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { sneeze } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { sneeze } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { sneeze } className = \"iconl\" />\r\n                                    }\r\n                                    </div>\r\n                                    <div className = \"col\">\r\n                                        <h3 className = \"card-title h3 mb-2 text-left\">Cover coughs and sneezes</h3>\r\n                                        <ul>\r\n                                            <li><strong>If you are in a private setting and do not have on your cloth face covering, remember to always cover your mouth and nose</strong> <br /> with a tissue when you cough or sneeze or use the inside of your elbow.</li>\r\n                                            <li><strong>Throw used tissues</strong> in the trash.</li>\r\n                                            <li>Immediately <strong>wash your hands</strong> with soap and water for at least 20 seconds. If soap and water are not readily available, clean your hands with a hand sanitizer that contains at least 60% alcohol.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"row \">\r\n                    <div className = \"col-md-12\">\r\n                        <div className = \"border-0 mb-3\">\r\n                            <div className = \"card-body bg-white\">\r\n                                <div className = \"row\">\r\n                                    <div className = \"card-icon pt-2 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { cleaning } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { cleaning } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { cleaning } className = \"iconl\" />\r\n                                    }\r\n                                    </div>\r\n                                    <div className = \"col\">\r\n\r\n                                        <h3 className = \"card-title h3 mb-2 text-left\">Clean and disinfect</h3> <br />\r\n                                        <ul className = \"false\">\r\n                                            <li><strong>Clean AND disinfect frequently touched surfaces daily</strong>. This includes tables, doorknobs, light switches, countertops, handles, desks, phones, keyboards, toilets, faucets, and sinks.</li>\r\n                                            <li><strong>If surfaces are dirty, clean them.</strong> Use detergent or soap and water prior to disinfection.</li>\r\n                                            <li><strong>Then, use a household disinfectant.</strong> Most common EPA-registered household disinfectants will work.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"row \">\r\n                    <div className = \"col-md-12\">\r\n                        <div className = \"border-0 mb-3\">\r\n                            <div className = \"card-body bg-white\">\r\n                                <div className = \"row\">\r\n                                    <div className = \"card-icon pt-2 d-md-block ml-3\">\r\n                                    {\r\n                                        window.innerWidth <= 500 ?\r\n                                            <img src = { health } className = \"icons\" />\r\n                                        :\r\n                                        window.innerWidth > 500 && window.innerWidth <= 950 ?\r\n                                            <img src = { health } className = \"iconm\" />\r\n                                        :\r\n                                            <img src = { health } className = \"iconl\" />\r\n                                    }\r\n                                    </div>\r\n                                    <div className = \"col\">\r\n                                        <h3 className = \"card-title h3 mb-2 text-left\">Monitor Your Health</h3>\r\n                                        <ul className = \"false\">\r\n                                            <li><strong>Be alert for symptoms.</strong> Watch for fever, cough, shortness of breath.\r\n                                                <ul>\r\n                                                    <li>Especially important if you are running essential errands, going into the office or workplace, and in settings where it may be difficult to keep a physical distance of 6 feet.</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><strong>Take your temperature</strong> if symptoms develop.\r\n                                                <ul>\r\n                                                    <li>Don’t take your temperature within 30 minutes of exercising or after taking medications that could lower your temperature, like acetaminophen.</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Precautions;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './Components/Header';\nimport Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport World from './Components/World';\nimport News from './Components/News';\nimport './Components/style/style.css';\nimport Precautions from './Components/Precautions';\n\n\nfunction App() {\n  return (\n    \n    <BrowserRouter basename=\"/covid-19-tracker\">\n      <div className = \"page-container\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" render={()=>( <div className=\"body\"> <Home /> </div> )} />\n          <Route exact path='/world' render={()=>(<div className=\"body\"> <World /> </div> )} />\n          <Route exact path='/news' render={()=>(<div className=\"body\"> <News /> </div> )} />\n          <Route exact path='/precaution' render={()=>(<div className=\"body\"> <Precautions /> </div> )} />\n          <Redirect to = \"/\" />\n        </Switch>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n    );\n    var docWidth = document.documentElement.offsetWidth;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/doubt.504096b8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/washing-hands.b1ec7845.jpg\";","module.exports = __webpack_public_path__ + \"static/media/social-distance.a835f781.png\";","module.exports = __webpack_public_path__ + \"static/media/cover-face.8666984c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sneeze.5c74562d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/house-cleaing.8012cc6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/monitor-health.55acaeab.jpg\";"],"sourceRoot":""}